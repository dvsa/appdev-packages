name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run the workflow without publishing to npm'
        required: false
        type: boolean
      package:
        description: 'The package to publish'
        required: true
        type: choice
        options:
          - 'aws-utils'
          - 'biome-config'
          - 'common'
          - 'database'
          - 'feature-flags'
          - 'openapi-schema-generator'
          - 'service-bundler'
  push:
    branches:
      - main

jobs:
  check-changes:
    name: Check for package changes
    runs-on: ubuntu-latest
    outputs:
      changed_packages: ${{ steps.get-changed-packages.outputs.changed_packages }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            packages/**

      - name: Get changed packages
        id: get-changed-packages
        run: |
          changed_packages=$(echo '${{ steps.changed-files.outputs.all_changed_files }}' | grep -oP 'packages/\K[^/]+' | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "changed_packages=$changed_packages" >> $GITHUB_OUTPUT

  publish-packages:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.changed_packages != '[]' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.check-changes.outputs.changed_packages) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Publish package
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ github.event.inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/${{ matrix.package }}'
          token: ${{ secrets.NPM_AUTH_TOKEN }}
