name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run the workflow without publishing to npm'
        required: false
        type: boolean
      package:
        description: 'The package to publish'
        required: true
        type: choice
        options:
          - 'appdev-common'
          - 'cvs-common'
          - 'feature-flags'
          - 'service-bundler'
          - 'aws-utils'
          - 'database'
          - 'biome-config'
          - 'business-events'
          - 'openapi-schema-gen'
  push:
    branches:
      - main

permissions:
  contents: read
  
jobs:
  orchestrator:
    name: Orchestrator
    runs-on: ubuntu-latest
    outputs:
      publish-cvs-common: ${{ steps.changed-cvs-common.outputs.any_changed == 'true' || null }}
      publish-appdev-common: ${{ steps.changed-appdev-common.outputs.any_changed == 'true' || null }}
      publish-feature-flags: ${{ steps.changed-feat-flags.outputs.any_changed == 'true' || null }}
      publish-service-bundler: ${{ steps.changed-service-bundler.outputs.any_changed == 'true' || null }}
      publish-aws-utils: ${{ steps.changed-aws-utils.outputs.any_changed == 'true' || null }}
      publish-database-operations: ${{ steps.changed-database-operations.outputs.any_changed == 'true' || null }}
      publish-biome-config: ${{ steps.changed-biome-config.outputs.any_changed == 'true' || null }}
      publish-openapi-schema-gen: ${{ steps.changed-openapi-schema-gen.outputs.any_changed == 'true' || null }}
      publish-business-events: ${{ steps.changed-business-events.outputs.any_changed == 'true' || null }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for `/packages/cvs-common` changes
        uses: tj-actions/changed-files@v47
        id: changed-cvs-common
        with:
          files: |
            packages/cvs-common/**

      - name: Check for `/packages/appdev-common` changes
        uses: tj-actions/changed-files@v47
        id: changed-appdev-common
        with:
          files: |
            packages/appdev-common/**

      - name: Check for `/packages/feature-flags` changes
        uses: tj-actions/changed-files@v47
        id: changed-feat-flags
        with:
          files: |
            packages/feature-flags/**    

      - name: Check for `/packages/service-bundler` changes
        uses: tj-actions/changed-files@v47
        id: changed-service-bundler
        with:
          files: |
            packages/service-bundler/**

      - name: Check for `/packages/aws-utils` changes
        uses: tj-actions/changed-files@v47
        id: changed-aws-utils
        with:
          files: |
            packages/aws-utils/**        

      - name: Check for `/packages/database` changes
        uses: tj-actions/changed-files@v47
        id: changed-database-operations
        with:
          files: |
            packages/database/**

      - name: Check for `/packages/biome-config` changes
        uses: tj-actions/changed-files@v47
        id: changed-biome-config
        with:
          files: |
            packages/biome-config/**

      - name: Check for `/packages/business-events` changes
        uses: tj-actions/changed-files@v47
        id: changed-business-events
        with:
          files: |
            packages/business-events/**

      - name: Check for `/packages/openai-schema-generator` changes
        uses: tj-actions/changed-files@v47
        id: changed-openapi-schema-gen
        with:
          files: |
            packages/openapi-schema-generator/**      

  publish-cvs-common:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-cvs-common || github.event_name == 'workflow_dispatch' && inputs.package == 'cvs-common'}}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/cvs-common" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/cvs-common'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-appdev-common:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-appdev-common || github.event_name == 'workflow_dispatch' && inputs.package == 'appdev-common'}}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/appdev-common" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/appdev-common'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-feature-flags:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-feature-flags || github.event_name == 'workflow_dispatch' && inputs.package == 'feature-flags' }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/feature-flags" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/feature-flags'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-service-bundler:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-service-bundler || github.event_name == 'workflow_dispatch' && inputs.package == 'service-bundler' }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/service-bundler" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/service-bundler'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-aws-utils:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-aws-utils || github.event_name == 'workflow_dispatch' && inputs.package == 'aws-utils' }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/aws-utils" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/aws-utils'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-database-operations:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-database-operations || github.event_name == 'workflow_dispatch' && inputs.package == 'database' }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/database" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/database'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-biome-config:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-biome-config || github.event_name == 'workflow_dispatch' && inputs.package == 'biome-config' }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/biome-config" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/biome-config'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-business-events:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-business-events || github.event_name == 'workflow_dispatch' && inputs.package == 'business-events' }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/business-events" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/business-events'
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-openapi-schema-gen:
    needs: orchestrator
    runs-on: ubuntu-latest
    if: ${{ needs.orchestrator.outputs.publish-openapi-schema-gen || github.event_name == 'workflow_dispatch' && inputs.package == 'openapi-schema-gen' }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Publish package "packages/openapi-schema-generator" ${{ inputs.dry-run && 'in' || 'not in' }} dry run mode
        uses: ./.github/actions/publish-package
        with:
          dry-run: ${{ inputs.dry-run && 'true' || 'false' }}
          package-path: 'packages/openapi-schema-generator'
          token: ${{ secrets.NPM_AUTH_TOKEN }}
